{"version":3,"sources":["components/rank/Rank.js","components/navigation/Navigation.js","components/logo/brainLogo2.png","components/logo/Logo.js","components/imageLinkForm/ImageLinkForm.js","components/faceRecognition/FaceRecognition.js","App.js","reportWebVitals.js","index.js"],"names":["Rank","className","Navigation","style","zIndex","Logo","nodeRef","React","useRef","width","options","max","position","height","marginRight","ref","alt","src","brain","ImageLinkForm","onInputChange","onBtnSubmit","keyPressed","type","placeholder","onChange","onKeyPress","onClick","FaceRecognition","imageUrl","boxes","id","map","box","index","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","interactivity","events","onhover","mode","calculateSize","image","document","getElementById","setState","imageWidth","Number","imageHeight","updateDims","state","length","displayFaceBoxes","calculateFaceLocations","result","data","outputs","regions","face","clarifaiFace","region_info","bounding_box","left_col","top_row","right_col","bottom_row","console","log","event","input","target","a","models","predict","FACE_DETECT_MODEL","bind","window","addEventListener","this","removeEventListener","key","params","display","justifyContent","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.53315a03.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Rank = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{'Cristian, your current rank is...'}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{'#5'}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\nconst Navigation = () => {\r\n\treturn (\r\n\t\t<nav style={{zIndex:'3'}}>\r\n\t\t\t<p className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t</nav>\r\n\t\t);\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brainLogo2.30c2c6b0.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport brain from './brainLogo2.png';\r\n\r\nconst Logo = () => {\r\n\tconst nodeRef = React.useRef(null);\r\n\treturn (\r\n\t\t<div className='ma4 mt4' style={{width: '150px'}}> \r\n\t\t\t<Tilt nodeRef={nodeRef} className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{position: 'relative', zIndex: '3', height: 150, width: 150, marginRight: 0 }} >\r\n \t\t\t\t<div ref={nodeRef} className=\"Tilt-inner pa3\" style={{width: '100%', height:'100%'}}>\r\n \t\t\t\t\t<img  alt='logo' src={brain}/></div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onBtnSubmit, keyPressed }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p className='f3'>\r\n\t\t\t\t{'This Magic Brain will detect faces in your pictures. Give it a try.'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='form center pa4 br3 shadow-5'>\r\n\t\t\t\t\t<input className='outl-n f4 pa2 ph w-70 center bn br--left br4'\r\n\t\t\t\t\ttype='text' placeholder={\"Image URL\"} onChange={onInputChange} onKeyPress={keyPressed}/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='outl-n w-30 grow f4 link ph1 pv2 dib white\r\n\t\t\t\t\t\tbg-blue bn br--right br4'\r\n\t\t\t\t\t\tonClick={onBtnSubmit}\r\n\t\t\t\t\t>Detect</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, boxes }) => {\r\n\treturn (\r\n\t\t<div className='center ma'>\r\n      <div className='absolute mt2 m2' style={{zIndex: '3', position:'relative'}}>\r\n        <img id='inputImage' alt='' style={{width:'500px', height:'auto'}} src={imageUrl}/>\r\n\t\t\t\t{\r\n\t\t\t\t\tboxes.map((box, index) => {\r\n\t\t\t\t\t\treturn <div className='bounding-box' key={index}\r\n\t\t\t\t\t\t\t\tstyle={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai';\r\nimport './App.css';\r\nimport Rank from './components/rank/Rank';\r\nimport Navigation from './components/navigation/Navigation';\r\nimport Logo from './components/logo/Logo';\r\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\r\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: '13901b317f664b328f1d8d123271fd5b',\r\n});\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 150,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    events: {\r\n      onhover: {\r\n        enable: true,\r\n        mode: 'repulse'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      imageUrl: '',\r\n      boxes: [],\r\n      result: {},\r\n      imageWidth: 0,\r\n      imageHeight: 0,\r\n      clarifaiFace: {}\r\n    }\r\n    this.keyPressed = this.keyPressed.bind(this);\r\n  }\r\n\r\n  calculateSize = () => {\r\n    const image = document.getElementById('inputImage');\r\n\r\n    this.setState({\r\n      imageWidth: Number(image.width),\r\n      imageHeight: Number(image.height)\r\n    });\r\n  }\r\n\r\n  updateDims = () => {\r\n    if (this.state.boxes.length >= 1){\r\n      this.calculateSize();\r\n      this.displayFaceBoxes(this.calculateFaceLocations(this.state.result));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateDims);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateDims);\r\n  }\r\n\r\n  calculateFaceLocations = (data) => {\r\n    return data.outputs[0].data.regions.map(face => {\r\n      const clarifaiFace = face.region_info.bounding_box;\r\n      this.calculateSize();\r\n  \r\n      const width = this.state.imageWidth;\r\n      const height = this.state.imageHeight;\r\n  \r\n      return {\r\n        leftCol: clarifaiFace.left_col * width,\r\n        topRow: clarifaiFace.top_row * height,\r\n        rightCol: width - (clarifaiFace.right_col * width),\r\n        bottomRow: height - (clarifaiFace.bottom_row * height)\r\n      }\r\n    });\r\n  }\r\n\r\n  displayFaceBoxes = (boxes) => {\r\n    this.setState(\r\n      {\r\n        boxes: boxes\r\n      },\r\n      () => console.log(boxes)\r\n    )\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ input: event.target.value })\r\n  }\r\n\r\n  onBtnSubmit = async () => {\r\n    this.setState({ imageUrl: this.state.input });\r\n    \r\n    let result = await app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\r\n    this.setState({ result: result });\r\n    this.displayFaceBoxes(this.calculateFaceLocations(result))\r\n  }\r\n\r\n  keyPressed(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.onBtnSubmit();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className='particles'\r\n          params={particlesOptions}\r\n        />\r\n        <div className=\"Nav\" style={{display: 'flex', justifyContent: 'space-between'}}>\r\n          <Logo />\r\n          <Navigation />\r\n        </div>\r\n        <Rank />\r\n        <ImageLinkForm onInputChange={this.onInputChange} onBtnSubmit={this.onBtnSubmit} keyPressed={this.keyPressed} />\r\n        <FaceRecognition boxes={this.state.boxes} imageUrl={this.state.imageUrl} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}